{
  "name": "tty.js",
  "description": "A terminal for your browser",
  "author": {
    "name": "Christopher Jeffrey"
  },
  "version": "0.2.13",
  "main": "./index.js",
  "bin": {
    "tty.js": "./bin/tty.js"
  },
  "man": [
    "./man/tty.js.1"
  ],
  "preferGlobal": false,
  "repository": {
    "type": "git",
    "url": "git://github.com/chjj/tty.js.git"
  },
  "homepage": "https://github.com/chjj/tty.js",
  "bugs": {
    "url": "https://github.com/chjj/tty.js/issues"
  },
  "keywords": [
    "tty",
    "terminal",
    "term",
    "xterm"
  ],
  "tags": [
    "tty",
    "terminal",
    "term",
    "xterm"
  ],
  "dependencies": {
    "express": "3.1.0",
    "socket.io": "0.9.13",
    "pty.js": "0.2.3",
    "term.js": "0.0.3"
  },
  "engines": {
    "node": ">= 0.8.0"
  },
  "readme": "# tty.js\n\nA terminal in your browser using node.js and socket.io. Based on Fabrice\nBellard's vt100 for [jslinux](http://bellard.org/jslinux/).\n\nFor the standalone web terminal, see\n[**term.js**](https://github.com/chjj/term.js).\n\nFor the lowlevel terminal spawner, see\n[**pty.js**](https://github.com/chjj/pty.js).\n\n## Screenshots\n\n### irssi\n\n![](http://i.imgur.com/wqare.png)\n\n### vim & alsamixer\n\n![](http://i.imgur.com/Zg1Jq.png)\n\n### bash\n\n![](http://i.imgur.com/HimZb.png)\n\n## Features\n\n- Tabs, Stacking Windows, Maximizable Terminals\n- Screen/Tmux-like keys (optional)\n- Ability to efficiently render programs: vim, mc, irssi, vifm, etc.\n- Support for xterm mouse events\n- 256 color support\n- Persistent sessions\n\n## Install\n\n``` bash\n$ npm install tty.js\n```\n\n## Usage\n\ntty.js is an app, but it's also possible to hook into it programatically.\n\n``` js\nvar tty = require('tty.js');\n\nvar app = tty.createServer({\n  shell: 'bash',\n  users: {\n    foo: 'bar'\n  },\n  port: 8000\n});\n\napp.get('/foo', function(req, res, next) {\n  res.send('bar');\n});\n\napp.listen();\n```\n\n## Configuration\n\nConfiguration is stored in `~/.tty.js/config.json` or `~/.tty.js` as a single\nJSON file. An example configuration file looks like:\n\n``` json\n{\n  \"users\": {\n    \"hello\": \"world\"\n  },\n  \"https\": {\n    \"key\": \"./server.key\",\n    \"cert\": \"./server.crt\"\n  },\n  \"port\": 8080,\n  \"hostname\": \"127.0.0.1\",\n  \"shell\": \"sh\",\n  \"shellArgs\": [\"arg1\", \"arg2\"],\n  \"static\": \"./static\",\n  \"limitGlobal\": 10000,\n  \"limitPerUser\": 1000,\n  \"localOnly\": false,\n  \"cwd\": \".\",\n  \"syncSession\": false,\n  \"sessionTimeout\": 600000,\n  \"log\": true,\n  \"io\": { \"log\": false },\n  \"debug\": false,\n  \"term\": {\n    \"termName\": \"xterm\",\n    \"geometry\": [80, 24],\n    \"scrollback\": 1000,\n    \"visualBell\": false,\n    \"popOnBell\": false,\n    \"cursorBlink\": false,\n    \"screenKeys\": false,\n    \"colors\": [\n      \"#2e3436\",\n      \"#cc0000\",\n      \"#4e9a06\",\n      \"#c4a000\",\n      \"#3465a4\",\n      \"#75507b\",\n      \"#06989a\",\n      \"#d3d7cf\",\n      \"#555753\",\n      \"#ef2929\",\n      \"#8ae234\",\n      \"#fce94f\",\n      \"#729fcf\",\n      \"#ad7fa8\",\n      \"#34e2e2\",\n      \"#eeeeec\"\n    ]\n  }\n}\n```\n\nUsernames and passwords can be plaintext or sha1 hashes.\n\n### 256 colors\n\nIf tty.js fails to check your terminfo properly, you can force your `TERM`\nto `xterm-256color` by setting `\"termName\": \"xterm-256color\"` in your config.\n\n## Security\n\ntty.js currently has https as an option. It also has express' default basic\nauth middleware as an option, until it possibly gets something more robust.\nIt's ultimately up to you to make sure no one has access to your terminals\nbut you.\n\n## CLI\n\n- `tty.js --port 3000` - start and bind to port 3000.\n- `tty.js --daemonize` - daemonize process.\n- `tty.js --config ~/my-config.json` - specify config file.\n\n## TERM\n\nThe main goal of tty.js is to eventually write a full xterm emulator.\nThis goal has almost been reached, but there are a few control sequences\nnot implemented fully. `TERM` should render everything fine when set to\n`xterm`.\n\n## Portability\n\ntty.js should ultimately be able to work on any unix that implements unix98\ntty's and `forkpty(3)`. tty.js builds on linux and osx, and it *should* build\non NetBSD, FreeBSD, and OpenBSD as well. If you have trouble building, please\npost an issue.\n\n## Todo\n\nThe distance to go before full xterm compatibility.\n\n- VT52 codes for compatibility\n- All vt400 rectangle sequences\n- Remaining DEC private modes\n- Miscellaneous sequences: cursor shape, window title\n- Origin Mode, Insert Mode\n- Proper Tab Setting\n\n## License\n\nCopyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n\n[1]: http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#Mouse%20Tracking\n",
  "readmeFilename": "README.md",
  "_id": "tty.js@0.2.13",
  "_from": "tty.js@"
}
